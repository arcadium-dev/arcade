services:
  # arcadium services
  #--------------------------------------------------------------------------
  assets:
    image: assets:latest
    container_name: assets
    env_file:
      - env/arcade
    ports:
      - 4202:4202
    volumes:
      - certificates_volume:/etc/certs
      - ./asset/test/coverage:/arcadium/coverage
    networks:
      - arcadium_network
      - database_network
      - observability_network

  # arcadium clients
  #------------------------------------------------------------------------
  curl:
    image: curl:latest
    working_dir: /etc
    volumes:
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  # observability services
  #--------------------------------------------------------------------------
  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    ports:
      - 4001:8086
    volumes:
      - ./env/influx.yml:/etc/influxdb2/config.yml
      - influxdb_volume:/var/lib/influxdb2
      - certificates_volume:/etc/certs
    networks:
      - observability_network

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    env_file:
      - env/influxdb_token
    volumes:
      - ./env/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - certificates_volume:/etc/certs
    networks:
      - observability_network

  influx:
    image: influxdb:alpine
    container_name: influx
    entrypoint: [ "influx" ]
    networks:
      - observability_network

  # database services
  #--------------------------------------------------------------------------
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    hostname: postgres
    command: ["-c", "config_file=/etc/postgresql.conf"]
    restart: always
    shm_size: 128mb
    env_file:
      - env/postgres
    volumes: 
      - postgres_volume:/var/lib/postgres/data
      - certificates_volume:/etc/certs
      - ./env/postgresql.conf:/etc/postgresql.conf:rw
    networks:
      - database_network

  # database clients
  #--------------------------------------------------------------------------
  migrate:
    image: migrate:latest
    depends_on:
      - postgres
    env_file:
      - env/migrate
    volumes:
      - certificates_volume:/etc/certs
    networks:
      - database_network

  psql:
    image: postgres:16-alpine
    entrypoint: ["psql", "postgres://arcadium:arcadium@postgres:5432/arcade?sslmode=verify-full&sslcert=/etc/certs/psql_client.pem&sslkey=/etc/certs/psql_client_key.pem&sslrootcert=/etc/certs/rootCA.pem"]
    volumes:
      - certificates_volume:/etc/certs
    networks:
      - database_network

  # utilities
  #--------------------------------------------------------------------------
  mkcert:
    image: mkcert:latest
    environment:
      - CAROOT=/etc/certs
    volumes:
      - certificates_volume:/etc/certs

  # To create a new set of migrations run: `docker-compose run --rm create_migration <migration_name>`
  create_migration:
    image: migrate/migrate:v4.17.0
    entrypoint: ["/migrate", "create", "-ext", "sql", "-dir", "/migrations", "-seq"]
    volumes:
      - ./migrations:/migration

volumes:
  certificates_volume:
  influxdb_volume:
  postgres_volume:


networks:
  arcadium_network:
    external: true
  database_network:
    external: true
  observability_network:
    external: true
