version: '3.3'

services:
  assets:
    image: assets:latest
    container_name: assets
    env_file:
      - env/arcade
    ports:
      - 4202:4202
    volumes:
      - certificates_volume:/etc/certs
      - ./asset/test/coverage:/arcadium/coverage
    networks:
      - arcadium_network

  influxdb:
    image: influxdb:alpine
    container_name: influxdb
    ports:
      - 4001:8086
    volumes:
      - ./env/influx.yml:/etc/influxdb2/config.yml
      - influxdb_volume:/var/lib/influxdb2
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    env_file:
      - env/influxdb_token
    volumes:
      - ./env/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  influx:
    image: influxdb:alpine
    container_name: influx
    entrypoint: [ "influx" ]
    networks:
      - arcadium_network

  cockroach:
    image: cockroachdb/cockroach:v21.2.8
    container_name: cockroach
    hostname: cockroach
    command: ["start-single-node", "--certs-dir=/etc/certs"]
    ports:
      - 4000:8080
    volumes:
      - database_volume:/cockroach/cockroach-data
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  migrate:
    image: assets-migrate:latest
    depends_on:
      - cockroach
    env_file:
      - env/migrate
    volumes:
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  mkcert:
    image: mkcert:latest
    environment:
      - CAROOT=/etc/certs
    volumes:
      - certificates_volume:/etc/certs

  csql:
    image: cockroachdb/cockroach:v21.2.8
    entrypoint: ["./cockroach", "sql", "--certs-dir=/etc/certs"]
    env_file:
      - env/csql
    volumes:
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  curl:
    image: curl:latest
    working_dir: /etc
    volumes:
      - certificates_volume:/etc/certs
    networks:
      - arcadium_network

  # To create a new set of migrations run: `docker-compose run --rm create_migration <migration_name>`
  create_migration:
    image: migrate/migrate:v4.15.1
    entrypoint: ["/migrate", "create", "-ext", "sql", "-dir", "/migrations", "-seq"]
    volumes:
      - ./migrations:/migration

volumes:
  certificates_volume:
  influxdb_volume:
  database_volume:


networks:
  arcadium_network:
    external: true
